// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: universe_cs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "universe_cs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class UniverseMsgHeadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UniverseMsgHead> {
} _UniverseMsgHead_default_instance_;
class ActorRegisteReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorRegisteReq> {
} _ActorRegisteReq_default_instance_;
class ActorRegisteRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorRegisteRsp> {
} _ActorRegisteRsp_default_instance_;
class ActorLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorLoginReq> {
} _ActorLoginReq_default_instance_;
class ActorLoginRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorLoginRsp> {
} _ActorLoginRsp_default_instance_;
class ActorLogoutReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorLogoutReq> {
} _ActorLogoutReq_default_instance_;
class ActorLogoutRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorLogoutRsp> {
} _ActorLogoutRsp_default_instance_;
class ActorGetFullDataReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorGetFullDataReq> {
} _ActorGetFullDataReq_default_instance_;
class ActorPosDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorPos> {
} _ActorPos_default_instance_;
class ActorGetFullDataRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorGetFullDataRsp> {
} _ActorGetFullDataRsp_default_instance_;
class ActorSetPosReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorSetPosReq> {
} _ActorSetPosReq_default_instance_;
class ActorSetPosRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActorSetPosRsp> {
} _ActorSetPosRsp_default_instance_;
class UniverseMsgBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UniverseMsgBody> {
} _UniverseMsgBody_default_instance_;
class UniverseMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UniverseMsg> {
} _UniverseMsg_default_instance_;

namespace protobuf_universe_5fcs_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgHead, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgHead, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgHead, msglen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgHead, actorid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorRegisteReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorRegisteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorRegisteReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorRegisteReq, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorRegisteRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorRegisteRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorRegisteRsp, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLoginReq, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLoginRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLoginRsp, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLogoutReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLogoutReq, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLogoutRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLogoutRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLogoutRsp, reserve_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorGetFullDataReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorGetFullDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorGetFullDataReq, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorPos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorPos, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorPos, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorGetFullDataRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorGetFullDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorGetFullDataRsp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorGetFullDataRsp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorGetFullDataRsp, pos_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetPosReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetPosReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetPosReq, pos_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetPosRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetPosRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetPosRsp, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, registereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, registersp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, loginreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, loginrsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, logoutreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, logoutrsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, getfulldatareq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, getfulldatarsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, setposreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsgBody, setposrsp_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsg, msghead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniverseMsg, msgbody_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(UniverseMsgHead)},
  { 11, 18, sizeof(ActorRegisteReq)},
  { 20, 26, sizeof(ActorRegisteRsp)},
  { 27, 33, sizeof(ActorLoginReq)},
  { 34, 40, sizeof(ActorLoginRsp)},
  { 41, 47, sizeof(ActorLogoutReq)},
  { 48, 54, sizeof(ActorLogoutRsp)},
  { 55, 61, sizeof(ActorGetFullDataReq)},
  { 62, 69, sizeof(ActorPos)},
  { 71, 79, sizeof(ActorGetFullDataRsp)},
  { 82, 88, sizeof(ActorSetPosReq)},
  { 89, 95, sizeof(ActorSetPosRsp)},
  { 96, 111, sizeof(UniverseMsgBody)},
  { 121, 128, sizeof(UniverseMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UniverseMsgHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorRegisteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorRegisteRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorLoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorLogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorLogoutRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorGetFullDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorGetFullDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorSetPosReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActorSetPosRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UniverseMsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UniverseMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "universe_cs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace

void TableStruct::Shutdown() {
  _UniverseMsgHead_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ActorRegisteReq_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ActorRegisteRsp_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ActorLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ActorLoginRsp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ActorLogoutReq_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ActorLogoutRsp_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ActorGetFullDataReq_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ActorPos_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ActorGetFullDataRsp_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _ActorSetPosReq_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _ActorSetPosRsp_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _UniverseMsgBody_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _UniverseMsg_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UniverseMsgHead_default_instance_.DefaultConstruct();
  _ActorRegisteReq_default_instance_.DefaultConstruct();
  _ActorRegisteRsp_default_instance_.DefaultConstruct();
  _ActorLoginReq_default_instance_.DefaultConstruct();
  _ActorLoginRsp_default_instance_.DefaultConstruct();
  _ActorLogoutReq_default_instance_.DefaultConstruct();
  _ActorLogoutRsp_default_instance_.DefaultConstruct();
  _ActorGetFullDataReq_default_instance_.DefaultConstruct();
  _ActorPos_default_instance_.DefaultConstruct();
  _ActorGetFullDataRsp_default_instance_.DefaultConstruct();
  _ActorSetPosReq_default_instance_.DefaultConstruct();
  _ActorSetPosRsp_default_instance_.DefaultConstruct();
  _UniverseMsgBody_default_instance_.DefaultConstruct();
  _UniverseMsg_default_instance_.DefaultConstruct();
  _ActorGetFullDataRsp_default_instance_.get_mutable()->pos_ = const_cast< ::ActorPos*>(
      ::ActorPos::internal_default_instance());
  _ActorSetPosReq_default_instance_.get_mutable()->pos_ = const_cast< ::ActorPos*>(
      ::ActorPos::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->registereq_ = const_cast< ::ActorRegisteReq*>(
      ::ActorRegisteReq::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->registersp_ = const_cast< ::ActorRegisteRsp*>(
      ::ActorRegisteRsp::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->loginreq_ = const_cast< ::ActorLoginReq*>(
      ::ActorLoginReq::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->loginrsp_ = const_cast< ::ActorLoginRsp*>(
      ::ActorLoginRsp::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->logoutreq_ = const_cast< ::ActorLogoutReq*>(
      ::ActorLogoutReq::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->logoutrsp_ = const_cast< ::ActorLogoutRsp*>(
      ::ActorLogoutRsp::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->getfulldatareq_ = const_cast< ::ActorGetFullDataReq*>(
      ::ActorGetFullDataReq::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->getfulldatarsp_ = const_cast< ::ActorGetFullDataRsp*>(
      ::ActorGetFullDataRsp::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->setposreq_ = const_cast< ::ActorSetPosReq*>(
      ::ActorSetPosReq::internal_default_instance());
  _UniverseMsgBody_default_instance_.get_mutable()->setposrsp_ = const_cast< ::ActorSetPosRsp*>(
      ::ActorSetPosRsp::internal_default_instance());
  _UniverseMsg_default_instance_.get_mutable()->msghead_ = const_cast< ::UniverseMsgHead*>(
      ::UniverseMsgHead::internal_default_instance());
  _UniverseMsg_default_instance_.get_mutable()->msgbody_ = const_cast< ::UniverseMsgBody*>(
      ::UniverseMsgBody::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021universe_cs.proto\"A\n\017UniverseMsgHead\022\r"
      "\n\005msgId\030\001 \002(\005\022\016\n\006msgLen\030\002 \002(\005\022\017\n\007actorId"
      "\030\003 \002(\005\"+\n\017ActorRegisteReq\022\n\n\002id\030\001 \002(\005\022\014\n"
      "\004name\030\002 \002(\t\"!\n\017ActorRegisteRsp\022\016\n\006result"
      "\030\001 \002(\005\"\033\n\rActorLoginReq\022\n\n\002id\030\001 \002(\005\"\037\n\rA"
      "ctorLoginRsp\022\016\n\006result\030\001 \002(\005\"\034\n\016ActorLog"
      "outReq\022\n\n\002id\030\001 \002(\005\"!\n\016ActorLogoutRsp\022\017\n\007"
      "reserve\030\001 \001(\005\"!\n\023ActorGetFullDataReq\022\n\n\002"
      "id\030\001 \001(\005\" \n\010ActorPos\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002"
      "(\005\"G\n\023ActorGetFullDataRsp\022\n\n\002id\030\001 \001(\005\022\014\n"
      "\004name\030\002 \001(\t\022\026\n\003pos\030\003 \001(\0132\t.ActorPos\"(\n\016A"
      "ctorSetPosReq\022\026\n\003pos\030\003 \001(\0132\t.ActorPos\" \n"
      "\016ActorSetPosRsp\022\016\n\006result\030\001 \002(\005\"\215\003\n\017Univ"
      "erseMsgBody\022$\n\nregisteReq\030\001 \001(\0132\020.ActorR"
      "egisteReq\022$\n\nregisteRsp\030\002 \001(\0132\020.ActorReg"
      "isteRsp\022 \n\010loginReq\030\003 \001(\0132\016.ActorLoginRe"
      "q\022 \n\010loginRsp\030\004 \001(\0132\016.ActorLoginRsp\022\"\n\tl"
      "ogoutReq\030\005 \001(\0132\017.ActorLogoutReq\022\"\n\tlogou"
      "tRsp\030\006 \001(\0132\017.ActorLogoutRsp\022,\n\016getFullDa"
      "taReq\030\007 \001(\0132\024.ActorGetFullDataReq\022,\n\016get"
      "FullDataRsp\030\010 \001(\0132\024.ActorGetFullDataRsp\022"
      "\"\n\tsetPosReq\030\t \001(\0132\017.ActorSetPosReq\022\"\n\ts"
      "etPosRsp\030\n \001(\0132\017.ActorSetPosRsp\"S\n\013Unive"
      "rseMsg\022!\n\007msgHead\030\001 \002(\0132\020.UniverseMsgHea"
      "d\022!\n\007msgBody\030\002 \001(\0132\020.UniverseMsgBody*\233\003\n"
      "\rUniverseMsgId\022%\n!UNIVERSE_MSG_ID_ACTOR_"
      "REGISTE_REQ\020\001\022%\n!UNIVERSE_MSG_ID_ACTOR_R"
      "EGISTE_RSP\020\002\022#\n\037UNIVERSE_MSG_ID_ACTOR_LO"
      "GIN_REQ\020\003\022#\n\037UNIVERSE_MSG_ID_ACTOR_LOGIN"
      "_RSP\020\004\022$\n UNIVERSE_MSG_ID_ACTOR_LOGOUT_R"
      "EQ\020\005\022$\n UNIVERSE_MSG_ID_ACTOR_LOGOUT_RSP"
      "\020\006\022+\n\'UNIVERSE_MSG_ID_ACTOR_GET_FULL_DAT"
      "A_REQ\020\007\022+\n\'UNIVERSE_MSG_ID_ACTOR_GET_FUL"
      "L_DATA_RSP\020\010\022%\n!UNIVERSE_MSG_ID_ACTOR_SE"
      "T_POS_REQ\020\t\022%\n!UNIVERSE_MSG_ID_ACTOR_SET"
      "_POS_RSP\020\n"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1410);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "universe_cs.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_universe_5fcs_2eproto

const ::google::protobuf::EnumDescriptor* UniverseMsgId_descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_enum_descriptors[0];
}
bool UniverseMsgId_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UniverseMsgHead::kMsgIdFieldNumber;
const int UniverseMsgHead::kMsgLenFieldNumber;
const int UniverseMsgHead::kActorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UniverseMsgHead::UniverseMsgHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UniverseMsgHead)
}
UniverseMsgHead::UniverseMsgHead(const UniverseMsgHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msgid_, &from.msgid_,
    reinterpret_cast<char*>(&actorid_) -
    reinterpret_cast<char*>(&msgid_) + sizeof(actorid_));
  // @@protoc_insertion_point(copy_constructor:UniverseMsgHead)
}

void UniverseMsgHead::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&msgid_, 0, reinterpret_cast<char*>(&actorid_) -
    reinterpret_cast<char*>(&msgid_) + sizeof(actorid_));
}

UniverseMsgHead::~UniverseMsgHead() {
  // @@protoc_insertion_point(destructor:UniverseMsgHead)
  SharedDtor();
}

void UniverseMsgHead::SharedDtor() {
}

void UniverseMsgHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UniverseMsgHead::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UniverseMsgHead& UniverseMsgHead::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

UniverseMsgHead* UniverseMsgHead::New(::google::protobuf::Arena* arena) const {
  UniverseMsgHead* n = new UniverseMsgHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UniverseMsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:UniverseMsgHead)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&msgid_, 0, reinterpret_cast<char*>(&actorid_) -
      reinterpret_cast<char*>(&msgid_) + sizeof(actorid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UniverseMsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UniverseMsgHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 msgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_msgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 msgLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_msglen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msglen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 actorId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_actorid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UniverseMsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UniverseMsgHead)
  return false;
#undef DO_
}

void UniverseMsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UniverseMsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 msgId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgid(), output);
  }

  // required int32 msgLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msglen(), output);
  }

  // required int32 actorId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actorid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UniverseMsgHead)
}

::google::protobuf::uint8* UniverseMsgHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UniverseMsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 msgId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgid(), target);
  }

  // required int32 msgLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msglen(), target);
  }

  // required int32 actorId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actorid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UniverseMsgHead)
  return target;
}

size_t UniverseMsgHead::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UniverseMsgHead)
  size_t total_size = 0;

  if (has_msgid()) {
    // required int32 msgId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgid());
  }

  if (has_msglen()) {
    // required int32 msgLen = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msglen());
  }

  if (has_actorid()) {
    // required int32 actorId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  return total_size;
}
size_t UniverseMsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UniverseMsgHead)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 msgId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgid());

    // required int32 msgLen = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msglen());

    // required int32 actorId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UniverseMsgHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UniverseMsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  const UniverseMsgHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UniverseMsgHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UniverseMsgHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UniverseMsgHead)
    MergeFrom(*source);
  }
}

void UniverseMsgHead::MergeFrom(const UniverseMsgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UniverseMsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      msgid_ = from.msgid_;
    }
    if (cached_has_bits & 0x00000002u) {
      msglen_ = from.msglen_;
    }
    if (cached_has_bits & 0x00000004u) {
      actorid_ = from.actorid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UniverseMsgHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UniverseMsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniverseMsgHead::CopyFrom(const UniverseMsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UniverseMsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniverseMsgHead::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UniverseMsgHead::Swap(UniverseMsgHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UniverseMsgHead::InternalSwap(UniverseMsgHead* other) {
  std::swap(msgid_, other->msgid_);
  std::swap(msglen_, other->msglen_);
  std::swap(actorid_, other->actorid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UniverseMsgHead::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UniverseMsgHead

// required int32 msgId = 1;
bool UniverseMsgHead::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UniverseMsgHead::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
void UniverseMsgHead::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UniverseMsgHead::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
::google::protobuf::int32 UniverseMsgHead::msgid() const {
  // @@protoc_insertion_point(field_get:UniverseMsgHead.msgId)
  return msgid_;
}
void UniverseMsgHead::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:UniverseMsgHead.msgId)
}

// required int32 msgLen = 2;
bool UniverseMsgHead::has_msglen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UniverseMsgHead::set_has_msglen() {
  _has_bits_[0] |= 0x00000002u;
}
void UniverseMsgHead::clear_has_msglen() {
  _has_bits_[0] &= ~0x00000002u;
}
void UniverseMsgHead::clear_msglen() {
  msglen_ = 0;
  clear_has_msglen();
}
::google::protobuf::int32 UniverseMsgHead::msglen() const {
  // @@protoc_insertion_point(field_get:UniverseMsgHead.msgLen)
  return msglen_;
}
void UniverseMsgHead::set_msglen(::google::protobuf::int32 value) {
  set_has_msglen();
  msglen_ = value;
  // @@protoc_insertion_point(field_set:UniverseMsgHead.msgLen)
}

// required int32 actorId = 3;
bool UniverseMsgHead::has_actorid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UniverseMsgHead::set_has_actorid() {
  _has_bits_[0] |= 0x00000004u;
}
void UniverseMsgHead::clear_has_actorid() {
  _has_bits_[0] &= ~0x00000004u;
}
void UniverseMsgHead::clear_actorid() {
  actorid_ = 0;
  clear_has_actorid();
}
::google::protobuf::int32 UniverseMsgHead::actorid() const {
  // @@protoc_insertion_point(field_get:UniverseMsgHead.actorId)
  return actorid_;
}
void UniverseMsgHead::set_actorid(::google::protobuf::int32 value) {
  set_has_actorid();
  actorid_ = value;
  // @@protoc_insertion_point(field_set:UniverseMsgHead.actorId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorRegisteReq::kIdFieldNumber;
const int ActorRegisteReq::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorRegisteReq::ActorRegisteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorRegisteReq)
}
ActorRegisteReq::ActorRegisteReq(const ActorRegisteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ActorRegisteReq)
}

void ActorRegisteReq::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

ActorRegisteReq::~ActorRegisteReq() {
  // @@protoc_insertion_point(destructor:ActorRegisteReq)
  SharedDtor();
}

void ActorRegisteReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActorRegisteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorRegisteReq::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorRegisteReq& ActorRegisteReq::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorRegisteReq* ActorRegisteReq::New(::google::protobuf::Arena* arena) const {
  ActorRegisteReq* n = new ActorRegisteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorRegisteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorRegisteReq)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorRegisteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorRegisteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ActorRegisteReq.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorRegisteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorRegisteReq)
  return false;
#undef DO_
}

void ActorRegisteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorRegisteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActorRegisteReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorRegisteReq)
}

::google::protobuf::uint8* ActorRegisteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorRegisteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActorRegisteReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorRegisteReq)
  return target;
}

size_t ActorRegisteReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ActorRegisteReq)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t ActorRegisteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorRegisteReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorRegisteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorRegisteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorRegisteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorRegisteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorRegisteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorRegisteReq)
    MergeFrom(*source);
  }
}

void ActorRegisteReq::MergeFrom(const ActorRegisteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorRegisteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActorRegisteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorRegisteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorRegisteReq::CopyFrom(const ActorRegisteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorRegisteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorRegisteReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ActorRegisteReq::Swap(ActorRegisteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorRegisteReq::InternalSwap(ActorRegisteReq* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorRegisteReq::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorRegisteReq

// required int32 id = 1;
bool ActorRegisteReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActorRegisteReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ActorRegisteReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActorRegisteReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 ActorRegisteReq::id() const {
  // @@protoc_insertion_point(field_get:ActorRegisteReq.id)
  return id_;
}
void ActorRegisteReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ActorRegisteReq.id)
}

// required string name = 2;
bool ActorRegisteReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorRegisteReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorRegisteReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorRegisteReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ActorRegisteReq::name() const {
  // @@protoc_insertion_point(field_get:ActorRegisteReq.name)
  return name_.GetNoArena();
}
void ActorRegisteReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActorRegisteReq.name)
}
#if LANG_CXX11
void ActorRegisteReq::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActorRegisteReq.name)
}
#endif
void ActorRegisteReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActorRegisteReq.name)
}
void ActorRegisteReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActorRegisteReq.name)
}
::std::string* ActorRegisteReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ActorRegisteReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActorRegisteReq::release_name() {
  // @@protoc_insertion_point(field_release:ActorRegisteReq.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActorRegisteReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ActorRegisteReq.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorRegisteRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorRegisteRsp::ActorRegisteRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorRegisteRsp)
}
ActorRegisteRsp::ActorRegisteRsp(const ActorRegisteRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActorRegisteRsp)
}

void ActorRegisteRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

ActorRegisteRsp::~ActorRegisteRsp() {
  // @@protoc_insertion_point(destructor:ActorRegisteRsp)
  SharedDtor();
}

void ActorRegisteRsp::SharedDtor() {
}

void ActorRegisteRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorRegisteRsp::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorRegisteRsp& ActorRegisteRsp::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorRegisteRsp* ActorRegisteRsp::New(::google::protobuf::Arena* arena) const {
  ActorRegisteRsp* n = new ActorRegisteRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorRegisteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorRegisteRsp)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorRegisteRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorRegisteRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorRegisteRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorRegisteRsp)
  return false;
#undef DO_
}

void ActorRegisteRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorRegisteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorRegisteRsp)
}

::google::protobuf::uint8* ActorRegisteRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorRegisteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorRegisteRsp)
  return target;
}

size_t ActorRegisteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorRegisteRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorRegisteRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorRegisteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorRegisteRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorRegisteRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorRegisteRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorRegisteRsp)
    MergeFrom(*source);
  }
}

void ActorRegisteRsp::MergeFrom(const ActorRegisteRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorRegisteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActorRegisteRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorRegisteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorRegisteRsp::CopyFrom(const ActorRegisteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorRegisteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorRegisteRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ActorRegisteRsp::Swap(ActorRegisteRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorRegisteRsp::InternalSwap(ActorRegisteRsp* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorRegisteRsp::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorRegisteRsp

// required int32 result = 1;
bool ActorRegisteRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorRegisteRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorRegisteRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorRegisteRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 ActorRegisteRsp::result() const {
  // @@protoc_insertion_point(field_get:ActorRegisteRsp.result)
  return result_;
}
void ActorRegisteRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActorRegisteRsp.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorLoginReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorLoginReq::ActorLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorLoginReq)
}
ActorLoginReq::ActorLoginReq(const ActorLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ActorLoginReq)
}

void ActorLoginReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

ActorLoginReq::~ActorLoginReq() {
  // @@protoc_insertion_point(destructor:ActorLoginReq)
  SharedDtor();
}

void ActorLoginReq::SharedDtor() {
}

void ActorLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorLoginReq::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorLoginReq& ActorLoginReq::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorLoginReq* ActorLoginReq::New(::google::protobuf::Arena* arena) const {
  ActorLoginReq* n = new ActorLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorLoginReq)
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorLoginReq)
  return false;
#undef DO_
}

void ActorLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorLoginReq)
}

::google::protobuf::uint8* ActorLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorLoginReq)
  return target;
}

size_t ActorLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorLoginReq)
    MergeFrom(*source);
  }
}

void ActorLoginReq::MergeFrom(const ActorLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void ActorLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorLoginReq::CopyFrom(const ActorLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ActorLoginReq::Swap(ActorLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorLoginReq::InternalSwap(ActorLoginReq* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorLoginReq::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorLoginReq

// required int32 id = 1;
bool ActorLoginReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorLoginReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorLoginReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorLoginReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 ActorLoginReq::id() const {
  // @@protoc_insertion_point(field_get:ActorLoginReq.id)
  return id_;
}
void ActorLoginReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ActorLoginReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorLoginRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorLoginRsp::ActorLoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorLoginRsp)
}
ActorLoginRsp::ActorLoginRsp(const ActorLoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActorLoginRsp)
}

void ActorLoginRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

ActorLoginRsp::~ActorLoginRsp() {
  // @@protoc_insertion_point(destructor:ActorLoginRsp)
  SharedDtor();
}

void ActorLoginRsp::SharedDtor() {
}

void ActorLoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorLoginRsp::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorLoginRsp& ActorLoginRsp::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorLoginRsp* ActorLoginRsp::New(::google::protobuf::Arena* arena) const {
  ActorLoginRsp* n = new ActorLoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorLoginRsp)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorLoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorLoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorLoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorLoginRsp)
  return false;
#undef DO_
}

void ActorLoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorLoginRsp)
}

::google::protobuf::uint8* ActorLoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorLoginRsp)
  return target;
}

size_t ActorLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorLoginRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorLoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorLoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorLoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorLoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorLoginRsp)
    MergeFrom(*source);
  }
}

void ActorLoginRsp::MergeFrom(const ActorLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActorLoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorLoginRsp::CopyFrom(const ActorLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorLoginRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ActorLoginRsp::Swap(ActorLoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorLoginRsp::InternalSwap(ActorLoginRsp* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorLoginRsp::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorLoginRsp

// required int32 result = 1;
bool ActorLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorLoginRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 ActorLoginRsp::result() const {
  // @@protoc_insertion_point(field_get:ActorLoginRsp.result)
  return result_;
}
void ActorLoginRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActorLoginRsp.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorLogoutReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorLogoutReq::ActorLogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorLogoutReq)
}
ActorLogoutReq::ActorLogoutReq(const ActorLogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ActorLogoutReq)
}

void ActorLogoutReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

ActorLogoutReq::~ActorLogoutReq() {
  // @@protoc_insertion_point(destructor:ActorLogoutReq)
  SharedDtor();
}

void ActorLogoutReq::SharedDtor() {
}

void ActorLogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorLogoutReq::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorLogoutReq& ActorLogoutReq::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorLogoutReq* ActorLogoutReq::New(::google::protobuf::Arena* arena) const {
  ActorLogoutReq* n = new ActorLogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorLogoutReq)
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorLogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorLogoutReq)
  return false;
#undef DO_
}

void ActorLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorLogoutReq)
}

::google::protobuf::uint8* ActorLogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorLogoutReq)
  return target;
}

size_t ActorLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorLogoutReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorLogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorLogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorLogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorLogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorLogoutReq)
    MergeFrom(*source);
  }
}

void ActorLogoutReq::MergeFrom(const ActorLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void ActorLogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorLogoutReq::CopyFrom(const ActorLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorLogoutReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ActorLogoutReq::Swap(ActorLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorLogoutReq::InternalSwap(ActorLogoutReq* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorLogoutReq::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorLogoutReq

// required int32 id = 1;
bool ActorLogoutReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorLogoutReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorLogoutReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorLogoutReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 ActorLogoutReq::id() const {
  // @@protoc_insertion_point(field_get:ActorLogoutReq.id)
  return id_;
}
void ActorLogoutReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ActorLogoutReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorLogoutRsp::kReserveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorLogoutRsp::ActorLogoutRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorLogoutRsp)
}
ActorLogoutRsp::ActorLogoutRsp(const ActorLogoutRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reserve_ = from.reserve_;
  // @@protoc_insertion_point(copy_constructor:ActorLogoutRsp)
}

void ActorLogoutRsp::SharedCtor() {
  _cached_size_ = 0;
  reserve_ = 0;
}

ActorLogoutRsp::~ActorLogoutRsp() {
  // @@protoc_insertion_point(destructor:ActorLogoutRsp)
  SharedDtor();
}

void ActorLogoutRsp::SharedDtor() {
}

void ActorLogoutRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorLogoutRsp::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorLogoutRsp& ActorLogoutRsp::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorLogoutRsp* ActorLogoutRsp::New(::google::protobuf::Arena* arena) const {
  ActorLogoutRsp* n = new ActorLogoutRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorLogoutRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorLogoutRsp)
  reserve_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorLogoutRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorLogoutRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reserve = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_reserve();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserve_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorLogoutRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorLogoutRsp)
  return false;
#undef DO_
}

void ActorLogoutRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorLogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 reserve = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reserve(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorLogoutRsp)
}

::google::protobuf::uint8* ActorLogoutRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorLogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 reserve = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reserve(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorLogoutRsp)
  return target;
}

size_t ActorLogoutRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorLogoutRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 reserve = 1;
  if (has_reserve()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserve());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorLogoutRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorLogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorLogoutRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorLogoutRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorLogoutRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorLogoutRsp)
    MergeFrom(*source);
  }
}

void ActorLogoutRsp::MergeFrom(const ActorLogoutRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorLogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reserve()) {
    set_reserve(from.reserve());
  }
}

void ActorLogoutRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorLogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorLogoutRsp::CopyFrom(const ActorLogoutRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorLogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorLogoutRsp::IsInitialized() const {
  return true;
}

void ActorLogoutRsp::Swap(ActorLogoutRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorLogoutRsp::InternalSwap(ActorLogoutRsp* other) {
  std::swap(reserve_, other->reserve_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorLogoutRsp::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorLogoutRsp

// optional int32 reserve = 1;
bool ActorLogoutRsp::has_reserve() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorLogoutRsp::set_has_reserve() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorLogoutRsp::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorLogoutRsp::clear_reserve() {
  reserve_ = 0;
  clear_has_reserve();
}
::google::protobuf::int32 ActorLogoutRsp::reserve() const {
  // @@protoc_insertion_point(field_get:ActorLogoutRsp.reserve)
  return reserve_;
}
void ActorLogoutRsp::set_reserve(::google::protobuf::int32 value) {
  set_has_reserve();
  reserve_ = value;
  // @@protoc_insertion_point(field_set:ActorLogoutRsp.reserve)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorGetFullDataReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorGetFullDataReq::ActorGetFullDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorGetFullDataReq)
}
ActorGetFullDataReq::ActorGetFullDataReq(const ActorGetFullDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ActorGetFullDataReq)
}

void ActorGetFullDataReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

ActorGetFullDataReq::~ActorGetFullDataReq() {
  // @@protoc_insertion_point(destructor:ActorGetFullDataReq)
  SharedDtor();
}

void ActorGetFullDataReq::SharedDtor() {
}

void ActorGetFullDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorGetFullDataReq::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorGetFullDataReq& ActorGetFullDataReq::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorGetFullDataReq* ActorGetFullDataReq::New(::google::protobuf::Arena* arena) const {
  ActorGetFullDataReq* n = new ActorGetFullDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorGetFullDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorGetFullDataReq)
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorGetFullDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorGetFullDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorGetFullDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorGetFullDataReq)
  return false;
#undef DO_
}

void ActorGetFullDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorGetFullDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorGetFullDataReq)
}

::google::protobuf::uint8* ActorGetFullDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorGetFullDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorGetFullDataReq)
  return target;
}

size_t ActorGetFullDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorGetFullDataReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorGetFullDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorGetFullDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorGetFullDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorGetFullDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorGetFullDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorGetFullDataReq)
    MergeFrom(*source);
  }
}

void ActorGetFullDataReq::MergeFrom(const ActorGetFullDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorGetFullDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void ActorGetFullDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorGetFullDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorGetFullDataReq::CopyFrom(const ActorGetFullDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorGetFullDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorGetFullDataReq::IsInitialized() const {
  return true;
}

void ActorGetFullDataReq::Swap(ActorGetFullDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorGetFullDataReq::InternalSwap(ActorGetFullDataReq* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorGetFullDataReq::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorGetFullDataReq

// optional int32 id = 1;
bool ActorGetFullDataReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorGetFullDataReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorGetFullDataReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorGetFullDataReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 ActorGetFullDataReq::id() const {
  // @@protoc_insertion_point(field_get:ActorGetFullDataReq.id)
  return id_;
}
void ActorGetFullDataReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ActorGetFullDataReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorPos::kXFieldNumber;
const int ActorPos::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorPos::ActorPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorPos)
}
ActorPos::ActorPos(const ActorPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:ActorPos)
}

void ActorPos::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
}

ActorPos::~ActorPos() {
  // @@protoc_insertion_point(destructor:ActorPos)
  SharedDtor();
}

void ActorPos::SharedDtor() {
}

void ActorPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorPos::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorPos& ActorPos::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorPos* ActorPos::New(::google::protobuf::Arena* arena) const {
  ActorPos* n = new ActorPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorPos::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorPos)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorPos)
  return false;
#undef DO_
}

void ActorPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorPos)
}

::google::protobuf::uint8* ActorPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorPos)
  return target;
}

size_t ActorPos::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ActorPos)
  size_t total_size = 0;

  if (has_x()) {
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t ActorPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorPos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorPos)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorPos)
    MergeFrom(*source);
  }
}

void ActorPos::MergeFrom(const ActorPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActorPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorPos::CopyFrom(const ActorPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorPos::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ActorPos::Swap(ActorPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorPos::InternalSwap(ActorPos* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorPos::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorPos

// required int32 x = 1;
bool ActorPos::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorPos::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorPos::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorPos::clear_x() {
  x_ = 0;
  clear_has_x();
}
::google::protobuf::int32 ActorPos::x() const {
  // @@protoc_insertion_point(field_get:ActorPos.x)
  return x_;
}
void ActorPos::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ActorPos.x)
}

// required int32 y = 2;
bool ActorPos::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActorPos::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void ActorPos::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActorPos::clear_y() {
  y_ = 0;
  clear_has_y();
}
::google::protobuf::int32 ActorPos::y() const {
  // @@protoc_insertion_point(field_get:ActorPos.y)
  return y_;
}
void ActorPos::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ActorPos.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorGetFullDataRsp::kIdFieldNumber;
const int ActorGetFullDataRsp::kNameFieldNumber;
const int ActorGetFullDataRsp::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorGetFullDataRsp::ActorGetFullDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorGetFullDataRsp)
}
ActorGetFullDataRsp::ActorGetFullDataRsp(const ActorGetFullDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    pos_ = new ::ActorPos(*from.pos_);
  } else {
    pos_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ActorGetFullDataRsp)
}

void ActorGetFullDataRsp::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&pos_) + sizeof(id_));
}

ActorGetFullDataRsp::~ActorGetFullDataRsp() {
  // @@protoc_insertion_point(destructor:ActorGetFullDataRsp)
  SharedDtor();
}

void ActorGetFullDataRsp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pos_;
  }
}

void ActorGetFullDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorGetFullDataRsp::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorGetFullDataRsp& ActorGetFullDataRsp::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorGetFullDataRsp* ActorGetFullDataRsp::New(::google::protobuf::Arena* arena) const {
  ActorGetFullDataRsp* n = new ActorGetFullDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorGetFullDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorGetFullDataRsp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_pos()) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->::ActorPos::Clear();
    }
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorGetFullDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorGetFullDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ActorGetFullDataRsp.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorPos pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorGetFullDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorGetFullDataRsp)
  return false;
#undef DO_
}

void ActorGetFullDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorGetFullDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActorGetFullDataRsp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .ActorPos pos = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorGetFullDataRsp)
}

::google::protobuf::uint8* ActorGetFullDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorGetFullDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActorGetFullDataRsp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .ActorPos pos = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorGetFullDataRsp)
  return target;
}

size_t ActorGetFullDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorGetFullDataRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .ActorPos pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pos_);
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorGetFullDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorGetFullDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorGetFullDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorGetFullDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorGetFullDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorGetFullDataRsp)
    MergeFrom(*source);
  }
}

void ActorGetFullDataRsp::MergeFrom(const ActorGetFullDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorGetFullDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pos()->::ActorPos::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActorGetFullDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorGetFullDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorGetFullDataRsp::CopyFrom(const ActorGetFullDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorGetFullDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorGetFullDataRsp::IsInitialized() const {
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  return true;
}

void ActorGetFullDataRsp::Swap(ActorGetFullDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorGetFullDataRsp::InternalSwap(ActorGetFullDataRsp* other) {
  name_.Swap(&other->name_);
  std::swap(pos_, other->pos_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorGetFullDataRsp::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorGetFullDataRsp

// optional int32 id = 1;
bool ActorGetFullDataRsp::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActorGetFullDataRsp::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
void ActorGetFullDataRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActorGetFullDataRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 ActorGetFullDataRsp::id() const {
  // @@protoc_insertion_point(field_get:ActorGetFullDataRsp.id)
  return id_;
}
void ActorGetFullDataRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ActorGetFullDataRsp.id)
}

// optional string name = 2;
bool ActorGetFullDataRsp::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorGetFullDataRsp::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorGetFullDataRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorGetFullDataRsp::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ActorGetFullDataRsp::name() const {
  // @@protoc_insertion_point(field_get:ActorGetFullDataRsp.name)
  return name_.GetNoArena();
}
void ActorGetFullDataRsp::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActorGetFullDataRsp.name)
}
#if LANG_CXX11
void ActorGetFullDataRsp::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActorGetFullDataRsp.name)
}
#endif
void ActorGetFullDataRsp::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActorGetFullDataRsp.name)
}
void ActorGetFullDataRsp::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActorGetFullDataRsp.name)
}
::std::string* ActorGetFullDataRsp::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ActorGetFullDataRsp.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActorGetFullDataRsp::release_name() {
  // @@protoc_insertion_point(field_release:ActorGetFullDataRsp.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActorGetFullDataRsp::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ActorGetFullDataRsp.name)
}

// optional .ActorPos pos = 3;
bool ActorGetFullDataRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActorGetFullDataRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void ActorGetFullDataRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActorGetFullDataRsp::clear_pos() {
  if (pos_ != NULL) pos_->::ActorPos::Clear();
  clear_has_pos();
}
const ::ActorPos& ActorGetFullDataRsp::pos() const {
  // @@protoc_insertion_point(field_get:ActorGetFullDataRsp.pos)
  return pos_ != NULL ? *pos_
                         : *::ActorPos::internal_default_instance();
}
::ActorPos* ActorGetFullDataRsp::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::ActorPos;
  }
  // @@protoc_insertion_point(field_mutable:ActorGetFullDataRsp.pos)
  return pos_;
}
::ActorPos* ActorGetFullDataRsp::release_pos() {
  // @@protoc_insertion_point(field_release:ActorGetFullDataRsp.pos)
  clear_has_pos();
  ::ActorPos* temp = pos_;
  pos_ = NULL;
  return temp;
}
void ActorGetFullDataRsp::set_allocated_pos(::ActorPos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:ActorGetFullDataRsp.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorSetPosReq::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorSetPosReq::ActorSetPosReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorSetPosReq)
}
ActorSetPosReq::ActorSetPosReq(const ActorSetPosReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::ActorPos(*from.pos_);
  } else {
    pos_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ActorSetPosReq)
}

void ActorSetPosReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
}

ActorSetPosReq::~ActorSetPosReq() {
  // @@protoc_insertion_point(destructor:ActorSetPosReq)
  SharedDtor();
}

void ActorSetPosReq::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pos_;
  }
}

void ActorSetPosReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorSetPosReq::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorSetPosReq& ActorSetPosReq::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorSetPosReq* ActorSetPosReq::New(::google::protobuf::Arena* arena) const {
  ActorSetPosReq* n = new ActorSetPosReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorSetPosReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorSetPosReq)
  if (has_pos()) {
    GOOGLE_DCHECK(pos_ != NULL);
    pos_->::ActorPos::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorSetPosReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorSetPosReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ActorPos pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorSetPosReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorSetPosReq)
  return false;
#undef DO_
}

void ActorSetPosReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorSetPosReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActorPos pos = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorSetPosReq)
}

::google::protobuf::uint8* ActorSetPosReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorSetPosReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActorPos pos = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorSetPosReq)
  return target;
}

size_t ActorSetPosReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorSetPosReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .ActorPos pos = 3;
  if (has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorSetPosReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorSetPosReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorSetPosReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorSetPosReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorSetPosReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorSetPosReq)
    MergeFrom(*source);
  }
}

void ActorSetPosReq::MergeFrom(const ActorSetPosReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorSetPosReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::ActorPos::MergeFrom(from.pos());
  }
}

void ActorSetPosReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorSetPosReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorSetPosReq::CopyFrom(const ActorSetPosReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorSetPosReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorSetPosReq::IsInitialized() const {
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  return true;
}

void ActorSetPosReq::Swap(ActorSetPosReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorSetPosReq::InternalSwap(ActorSetPosReq* other) {
  std::swap(pos_, other->pos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorSetPosReq::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorSetPosReq

// optional .ActorPos pos = 3;
bool ActorSetPosReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorSetPosReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorSetPosReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorSetPosReq::clear_pos() {
  if (pos_ != NULL) pos_->::ActorPos::Clear();
  clear_has_pos();
}
const ::ActorPos& ActorSetPosReq::pos() const {
  // @@protoc_insertion_point(field_get:ActorSetPosReq.pos)
  return pos_ != NULL ? *pos_
                         : *::ActorPos::internal_default_instance();
}
::ActorPos* ActorSetPosReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::ActorPos;
  }
  // @@protoc_insertion_point(field_mutable:ActorSetPosReq.pos)
  return pos_;
}
::ActorPos* ActorSetPosReq::release_pos() {
  // @@protoc_insertion_point(field_release:ActorSetPosReq.pos)
  clear_has_pos();
  ::ActorPos* temp = pos_;
  pos_ = NULL;
  return temp;
}
void ActorSetPosReq::set_allocated_pos(::ActorPos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:ActorSetPosReq.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorSetPosRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorSetPosRsp::ActorSetPosRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActorSetPosRsp)
}
ActorSetPosRsp::ActorSetPosRsp(const ActorSetPosRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActorSetPosRsp)
}

void ActorSetPosRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

ActorSetPosRsp::~ActorSetPosRsp() {
  // @@protoc_insertion_point(destructor:ActorSetPosRsp)
  SharedDtor();
}

void ActorSetPosRsp::SharedDtor() {
}

void ActorSetPosRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorSetPosRsp::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActorSetPosRsp& ActorSetPosRsp::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActorSetPosRsp* ActorSetPosRsp::New(::google::protobuf::Arena* arena) const {
  ActorSetPosRsp* n = new ActorSetPosRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorSetPosRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorSetPosRsp)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActorSetPosRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActorSetPosRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActorSetPosRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActorSetPosRsp)
  return false;
#undef DO_
}

void ActorSetPosRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActorSetPosRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActorSetPosRsp)
}

::google::protobuf::uint8* ActorSetPosRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorSetPosRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorSetPosRsp)
  return target;
}

size_t ActorSetPosRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorSetPosRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorSetPosRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActorSetPosRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorSetPosRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorSetPosRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActorSetPosRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActorSetPosRsp)
    MergeFrom(*source);
  }
}

void ActorSetPosRsp::MergeFrom(const ActorSetPosRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActorSetPosRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActorSetPosRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActorSetPosRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorSetPosRsp::CopyFrom(const ActorSetPosRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorSetPosRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorSetPosRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ActorSetPosRsp::Swap(ActorSetPosRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorSetPosRsp::InternalSwap(ActorSetPosRsp* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorSetPosRsp::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorSetPosRsp

// required int32 result = 1;
bool ActorSetPosRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActorSetPosRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActorSetPosRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActorSetPosRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 ActorSetPosRsp::result() const {
  // @@protoc_insertion_point(field_get:ActorSetPosRsp.result)
  return result_;
}
void ActorSetPosRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActorSetPosRsp.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UniverseMsgBody::kRegisteReqFieldNumber;
const int UniverseMsgBody::kRegisteRspFieldNumber;
const int UniverseMsgBody::kLoginReqFieldNumber;
const int UniverseMsgBody::kLoginRspFieldNumber;
const int UniverseMsgBody::kLogoutReqFieldNumber;
const int UniverseMsgBody::kLogoutRspFieldNumber;
const int UniverseMsgBody::kGetFullDataReqFieldNumber;
const int UniverseMsgBody::kGetFullDataRspFieldNumber;
const int UniverseMsgBody::kSetPosReqFieldNumber;
const int UniverseMsgBody::kSetPosRspFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UniverseMsgBody::UniverseMsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UniverseMsgBody)
}
UniverseMsgBody::UniverseMsgBody(const UniverseMsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_registereq()) {
    registereq_ = new ::ActorRegisteReq(*from.registereq_);
  } else {
    registereq_ = NULL;
  }
  if (from.has_registersp()) {
    registersp_ = new ::ActorRegisteRsp(*from.registersp_);
  } else {
    registersp_ = NULL;
  }
  if (from.has_loginreq()) {
    loginreq_ = new ::ActorLoginReq(*from.loginreq_);
  } else {
    loginreq_ = NULL;
  }
  if (from.has_loginrsp()) {
    loginrsp_ = new ::ActorLoginRsp(*from.loginrsp_);
  } else {
    loginrsp_ = NULL;
  }
  if (from.has_logoutreq()) {
    logoutreq_ = new ::ActorLogoutReq(*from.logoutreq_);
  } else {
    logoutreq_ = NULL;
  }
  if (from.has_logoutrsp()) {
    logoutrsp_ = new ::ActorLogoutRsp(*from.logoutrsp_);
  } else {
    logoutrsp_ = NULL;
  }
  if (from.has_getfulldatareq()) {
    getfulldatareq_ = new ::ActorGetFullDataReq(*from.getfulldatareq_);
  } else {
    getfulldatareq_ = NULL;
  }
  if (from.has_getfulldatarsp()) {
    getfulldatarsp_ = new ::ActorGetFullDataRsp(*from.getfulldatarsp_);
  } else {
    getfulldatarsp_ = NULL;
  }
  if (from.has_setposreq()) {
    setposreq_ = new ::ActorSetPosReq(*from.setposreq_);
  } else {
    setposreq_ = NULL;
  }
  if (from.has_setposrsp()) {
    setposrsp_ = new ::ActorSetPosRsp(*from.setposrsp_);
  } else {
    setposrsp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:UniverseMsgBody)
}

void UniverseMsgBody::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&registereq_, 0, reinterpret_cast<char*>(&setposrsp_) -
    reinterpret_cast<char*>(&registereq_) + sizeof(setposrsp_));
}

UniverseMsgBody::~UniverseMsgBody() {
  // @@protoc_insertion_point(destructor:UniverseMsgBody)
  SharedDtor();
}

void UniverseMsgBody::SharedDtor() {
  if (this != internal_default_instance()) {
    delete registereq_;
  }
  if (this != internal_default_instance()) {
    delete registersp_;
  }
  if (this != internal_default_instance()) {
    delete loginreq_;
  }
  if (this != internal_default_instance()) {
    delete loginrsp_;
  }
  if (this != internal_default_instance()) {
    delete logoutreq_;
  }
  if (this != internal_default_instance()) {
    delete logoutrsp_;
  }
  if (this != internal_default_instance()) {
    delete getfulldatareq_;
  }
  if (this != internal_default_instance()) {
    delete getfulldatarsp_;
  }
  if (this != internal_default_instance()) {
    delete setposreq_;
  }
  if (this != internal_default_instance()) {
    delete setposrsp_;
  }
}

void UniverseMsgBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UniverseMsgBody::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UniverseMsgBody& UniverseMsgBody::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

UniverseMsgBody* UniverseMsgBody::New(::google::protobuf::Arena* arena) const {
  UniverseMsgBody* n = new UniverseMsgBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UniverseMsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:UniverseMsgBody)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_registereq()) {
      GOOGLE_DCHECK(registereq_ != NULL);
      registereq_->::ActorRegisteReq::Clear();
    }
    if (has_registersp()) {
      GOOGLE_DCHECK(registersp_ != NULL);
      registersp_->::ActorRegisteRsp::Clear();
    }
    if (has_loginreq()) {
      GOOGLE_DCHECK(loginreq_ != NULL);
      loginreq_->::ActorLoginReq::Clear();
    }
    if (has_loginrsp()) {
      GOOGLE_DCHECK(loginrsp_ != NULL);
      loginrsp_->::ActorLoginRsp::Clear();
    }
    if (has_logoutreq()) {
      GOOGLE_DCHECK(logoutreq_ != NULL);
      logoutreq_->::ActorLogoutReq::Clear();
    }
    if (has_logoutrsp()) {
      GOOGLE_DCHECK(logoutrsp_ != NULL);
      logoutrsp_->::ActorLogoutRsp::Clear();
    }
    if (has_getfulldatareq()) {
      GOOGLE_DCHECK(getfulldatareq_ != NULL);
      getfulldatareq_->::ActorGetFullDataReq::Clear();
    }
    if (has_getfulldatarsp()) {
      GOOGLE_DCHECK(getfulldatarsp_ != NULL);
      getfulldatarsp_->::ActorGetFullDataRsp::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_setposreq()) {
      GOOGLE_DCHECK(setposreq_ != NULL);
      setposreq_->::ActorSetPosReq::Clear();
    }
    if (has_setposrsp()) {
      GOOGLE_DCHECK(setposrsp_ != NULL);
      setposrsp_->::ActorSetPosRsp::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UniverseMsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UniverseMsgBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ActorRegisteReq registeReq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorRegisteRsp registeRsp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registersp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorLoginReq loginReq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorLoginRsp loginRsp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorLogoutReq logoutReq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorLogoutRsp logoutRsp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logoutrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorGetFullDataReq getFullDataReq = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfulldatareq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorGetFullDataRsp getFullDataRsp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfulldatarsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorSetPosReq setPosReq = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setposreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ActorSetPosRsp setPosRsp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setposrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UniverseMsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UniverseMsgBody)
  return false;
#undef DO_
}

void UniverseMsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UniverseMsgBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActorRegisteReq registeReq = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->registereq_, output);
  }

  // optional .ActorRegisteRsp registeRsp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->registersp_, output);
  }

  // optional .ActorLoginReq loginReq = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->loginreq_, output);
  }

  // optional .ActorLoginRsp loginRsp = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->loginrsp_, output);
  }

  // optional .ActorLogoutReq logoutReq = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->logoutreq_, output);
  }

  // optional .ActorLogoutRsp logoutRsp = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->logoutrsp_, output);
  }

  // optional .ActorGetFullDataReq getFullDataReq = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->getfulldatareq_, output);
  }

  // optional .ActorGetFullDataRsp getFullDataRsp = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->getfulldatarsp_, output);
  }

  // optional .ActorSetPosReq setPosReq = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->setposreq_, output);
  }

  // optional .ActorSetPosRsp setPosRsp = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->setposrsp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UniverseMsgBody)
}

::google::protobuf::uint8* UniverseMsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UniverseMsgBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActorRegisteReq registeReq = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->registereq_, deterministic, target);
  }

  // optional .ActorRegisteRsp registeRsp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->registersp_, deterministic, target);
  }

  // optional .ActorLoginReq loginReq = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->loginreq_, deterministic, target);
  }

  // optional .ActorLoginRsp loginRsp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->loginrsp_, deterministic, target);
  }

  // optional .ActorLogoutReq logoutReq = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->logoutreq_, deterministic, target);
  }

  // optional .ActorLogoutRsp logoutRsp = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->logoutrsp_, deterministic, target);
  }

  // optional .ActorGetFullDataReq getFullDataReq = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->getfulldatareq_, deterministic, target);
  }

  // optional .ActorGetFullDataRsp getFullDataRsp = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->getfulldatarsp_, deterministic, target);
  }

  // optional .ActorSetPosReq setPosReq = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->setposreq_, deterministic, target);
  }

  // optional .ActorSetPosRsp setPosRsp = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->setposrsp_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UniverseMsgBody)
  return target;
}

size_t UniverseMsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UniverseMsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .ActorRegisteReq registeReq = 1;
    if (has_registereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->registereq_);
    }

    // optional .ActorRegisteRsp registeRsp = 2;
    if (has_registersp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->registersp_);
    }

    // optional .ActorLoginReq loginReq = 3;
    if (has_loginreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->loginreq_);
    }

    // optional .ActorLoginRsp loginRsp = 4;
    if (has_loginrsp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->loginrsp_);
    }

    // optional .ActorLogoutReq logoutReq = 5;
    if (has_logoutreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->logoutreq_);
    }

    // optional .ActorLogoutRsp logoutRsp = 6;
    if (has_logoutrsp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->logoutrsp_);
    }

    // optional .ActorGetFullDataReq getFullDataReq = 7;
    if (has_getfulldatareq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getfulldatareq_);
    }

    // optional .ActorGetFullDataRsp getFullDataRsp = 8;
    if (has_getfulldatarsp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getfulldatarsp_);
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .ActorSetPosReq setPosReq = 9;
    if (has_setposreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->setposreq_);
    }

    // optional .ActorSetPosRsp setPosRsp = 10;
    if (has_setposrsp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->setposrsp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UniverseMsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UniverseMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const UniverseMsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UniverseMsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UniverseMsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UniverseMsgBody)
    MergeFrom(*source);
  }
}

void UniverseMsgBody::MergeFrom(const UniverseMsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UniverseMsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_registereq()->::ActorRegisteReq::MergeFrom(from.registereq());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_registersp()->::ActorRegisteRsp::MergeFrom(from.registersp());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_loginreq()->::ActorLoginReq::MergeFrom(from.loginreq());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_loginrsp()->::ActorLoginRsp::MergeFrom(from.loginrsp());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_logoutreq()->::ActorLogoutReq::MergeFrom(from.logoutreq());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_logoutrsp()->::ActorLogoutRsp::MergeFrom(from.logoutrsp());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_getfulldatareq()->::ActorGetFullDataReq::MergeFrom(from.getfulldatareq());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_getfulldatarsp()->::ActorGetFullDataRsp::MergeFrom(from.getfulldatarsp());
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_setposreq()->::ActorSetPosReq::MergeFrom(from.setposreq());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_setposrsp()->::ActorSetPosRsp::MergeFrom(from.setposrsp());
    }
  }
}

void UniverseMsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UniverseMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniverseMsgBody::CopyFrom(const UniverseMsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UniverseMsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniverseMsgBody::IsInitialized() const {
  if (has_registereq()) {
    if (!this->registereq_->IsInitialized()) return false;
  }
  if (has_registersp()) {
    if (!this->registersp_->IsInitialized()) return false;
  }
  if (has_loginreq()) {
    if (!this->loginreq_->IsInitialized()) return false;
  }
  if (has_loginrsp()) {
    if (!this->loginrsp_->IsInitialized()) return false;
  }
  if (has_logoutreq()) {
    if (!this->logoutreq_->IsInitialized()) return false;
  }
  if (has_getfulldatarsp()) {
    if (!this->getfulldatarsp_->IsInitialized()) return false;
  }
  if (has_setposreq()) {
    if (!this->setposreq_->IsInitialized()) return false;
  }
  if (has_setposrsp()) {
    if (!this->setposrsp_->IsInitialized()) return false;
  }
  return true;
}

void UniverseMsgBody::Swap(UniverseMsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UniverseMsgBody::InternalSwap(UniverseMsgBody* other) {
  std::swap(registereq_, other->registereq_);
  std::swap(registersp_, other->registersp_);
  std::swap(loginreq_, other->loginreq_);
  std::swap(loginrsp_, other->loginrsp_);
  std::swap(logoutreq_, other->logoutreq_);
  std::swap(logoutrsp_, other->logoutrsp_);
  std::swap(getfulldatareq_, other->getfulldatareq_);
  std::swap(getfulldatarsp_, other->getfulldatarsp_);
  std::swap(setposreq_, other->setposreq_);
  std::swap(setposrsp_, other->setposrsp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UniverseMsgBody::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UniverseMsgBody

// optional .ActorRegisteReq registeReq = 1;
bool UniverseMsgBody::has_registereq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UniverseMsgBody::set_has_registereq() {
  _has_bits_[0] |= 0x00000001u;
}
void UniverseMsgBody::clear_has_registereq() {
  _has_bits_[0] &= ~0x00000001u;
}
void UniverseMsgBody::clear_registereq() {
  if (registereq_ != NULL) registereq_->::ActorRegisteReq::Clear();
  clear_has_registereq();
}
const ::ActorRegisteReq& UniverseMsgBody::registereq() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.registeReq)
  return registereq_ != NULL ? *registereq_
                         : *::ActorRegisteReq::internal_default_instance();
}
::ActorRegisteReq* UniverseMsgBody::mutable_registereq() {
  set_has_registereq();
  if (registereq_ == NULL) {
    registereq_ = new ::ActorRegisteReq;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.registeReq)
  return registereq_;
}
::ActorRegisteReq* UniverseMsgBody::release_registereq() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.registeReq)
  clear_has_registereq();
  ::ActorRegisteReq* temp = registereq_;
  registereq_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_registereq(::ActorRegisteReq* registereq) {
  delete registereq_;
  registereq_ = registereq;
  if (registereq) {
    set_has_registereq();
  } else {
    clear_has_registereq();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.registeReq)
}

// optional .ActorRegisteRsp registeRsp = 2;
bool UniverseMsgBody::has_registersp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UniverseMsgBody::set_has_registersp() {
  _has_bits_[0] |= 0x00000002u;
}
void UniverseMsgBody::clear_has_registersp() {
  _has_bits_[0] &= ~0x00000002u;
}
void UniverseMsgBody::clear_registersp() {
  if (registersp_ != NULL) registersp_->::ActorRegisteRsp::Clear();
  clear_has_registersp();
}
const ::ActorRegisteRsp& UniverseMsgBody::registersp() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.registeRsp)
  return registersp_ != NULL ? *registersp_
                         : *::ActorRegisteRsp::internal_default_instance();
}
::ActorRegisteRsp* UniverseMsgBody::mutable_registersp() {
  set_has_registersp();
  if (registersp_ == NULL) {
    registersp_ = new ::ActorRegisteRsp;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.registeRsp)
  return registersp_;
}
::ActorRegisteRsp* UniverseMsgBody::release_registersp() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.registeRsp)
  clear_has_registersp();
  ::ActorRegisteRsp* temp = registersp_;
  registersp_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_registersp(::ActorRegisteRsp* registersp) {
  delete registersp_;
  registersp_ = registersp;
  if (registersp) {
    set_has_registersp();
  } else {
    clear_has_registersp();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.registeRsp)
}

// optional .ActorLoginReq loginReq = 3;
bool UniverseMsgBody::has_loginreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UniverseMsgBody::set_has_loginreq() {
  _has_bits_[0] |= 0x00000004u;
}
void UniverseMsgBody::clear_has_loginreq() {
  _has_bits_[0] &= ~0x00000004u;
}
void UniverseMsgBody::clear_loginreq() {
  if (loginreq_ != NULL) loginreq_->::ActorLoginReq::Clear();
  clear_has_loginreq();
}
const ::ActorLoginReq& UniverseMsgBody::loginreq() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.loginReq)
  return loginreq_ != NULL ? *loginreq_
                         : *::ActorLoginReq::internal_default_instance();
}
::ActorLoginReq* UniverseMsgBody::mutable_loginreq() {
  set_has_loginreq();
  if (loginreq_ == NULL) {
    loginreq_ = new ::ActorLoginReq;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.loginReq)
  return loginreq_;
}
::ActorLoginReq* UniverseMsgBody::release_loginreq() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.loginReq)
  clear_has_loginreq();
  ::ActorLoginReq* temp = loginreq_;
  loginreq_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_loginreq(::ActorLoginReq* loginreq) {
  delete loginreq_;
  loginreq_ = loginreq;
  if (loginreq) {
    set_has_loginreq();
  } else {
    clear_has_loginreq();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.loginReq)
}

// optional .ActorLoginRsp loginRsp = 4;
bool UniverseMsgBody::has_loginrsp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UniverseMsgBody::set_has_loginrsp() {
  _has_bits_[0] |= 0x00000008u;
}
void UniverseMsgBody::clear_has_loginrsp() {
  _has_bits_[0] &= ~0x00000008u;
}
void UniverseMsgBody::clear_loginrsp() {
  if (loginrsp_ != NULL) loginrsp_->::ActorLoginRsp::Clear();
  clear_has_loginrsp();
}
const ::ActorLoginRsp& UniverseMsgBody::loginrsp() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.loginRsp)
  return loginrsp_ != NULL ? *loginrsp_
                         : *::ActorLoginRsp::internal_default_instance();
}
::ActorLoginRsp* UniverseMsgBody::mutable_loginrsp() {
  set_has_loginrsp();
  if (loginrsp_ == NULL) {
    loginrsp_ = new ::ActorLoginRsp;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.loginRsp)
  return loginrsp_;
}
::ActorLoginRsp* UniverseMsgBody::release_loginrsp() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.loginRsp)
  clear_has_loginrsp();
  ::ActorLoginRsp* temp = loginrsp_;
  loginrsp_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_loginrsp(::ActorLoginRsp* loginrsp) {
  delete loginrsp_;
  loginrsp_ = loginrsp;
  if (loginrsp) {
    set_has_loginrsp();
  } else {
    clear_has_loginrsp();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.loginRsp)
}

// optional .ActorLogoutReq logoutReq = 5;
bool UniverseMsgBody::has_logoutreq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void UniverseMsgBody::set_has_logoutreq() {
  _has_bits_[0] |= 0x00000010u;
}
void UniverseMsgBody::clear_has_logoutreq() {
  _has_bits_[0] &= ~0x00000010u;
}
void UniverseMsgBody::clear_logoutreq() {
  if (logoutreq_ != NULL) logoutreq_->::ActorLogoutReq::Clear();
  clear_has_logoutreq();
}
const ::ActorLogoutReq& UniverseMsgBody::logoutreq() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.logoutReq)
  return logoutreq_ != NULL ? *logoutreq_
                         : *::ActorLogoutReq::internal_default_instance();
}
::ActorLogoutReq* UniverseMsgBody::mutable_logoutreq() {
  set_has_logoutreq();
  if (logoutreq_ == NULL) {
    logoutreq_ = new ::ActorLogoutReq;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.logoutReq)
  return logoutreq_;
}
::ActorLogoutReq* UniverseMsgBody::release_logoutreq() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.logoutReq)
  clear_has_logoutreq();
  ::ActorLogoutReq* temp = logoutreq_;
  logoutreq_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_logoutreq(::ActorLogoutReq* logoutreq) {
  delete logoutreq_;
  logoutreq_ = logoutreq;
  if (logoutreq) {
    set_has_logoutreq();
  } else {
    clear_has_logoutreq();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.logoutReq)
}

// optional .ActorLogoutRsp logoutRsp = 6;
bool UniverseMsgBody::has_logoutrsp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void UniverseMsgBody::set_has_logoutrsp() {
  _has_bits_[0] |= 0x00000020u;
}
void UniverseMsgBody::clear_has_logoutrsp() {
  _has_bits_[0] &= ~0x00000020u;
}
void UniverseMsgBody::clear_logoutrsp() {
  if (logoutrsp_ != NULL) logoutrsp_->::ActorLogoutRsp::Clear();
  clear_has_logoutrsp();
}
const ::ActorLogoutRsp& UniverseMsgBody::logoutrsp() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.logoutRsp)
  return logoutrsp_ != NULL ? *logoutrsp_
                         : *::ActorLogoutRsp::internal_default_instance();
}
::ActorLogoutRsp* UniverseMsgBody::mutable_logoutrsp() {
  set_has_logoutrsp();
  if (logoutrsp_ == NULL) {
    logoutrsp_ = new ::ActorLogoutRsp;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.logoutRsp)
  return logoutrsp_;
}
::ActorLogoutRsp* UniverseMsgBody::release_logoutrsp() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.logoutRsp)
  clear_has_logoutrsp();
  ::ActorLogoutRsp* temp = logoutrsp_;
  logoutrsp_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_logoutrsp(::ActorLogoutRsp* logoutrsp) {
  delete logoutrsp_;
  logoutrsp_ = logoutrsp;
  if (logoutrsp) {
    set_has_logoutrsp();
  } else {
    clear_has_logoutrsp();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.logoutRsp)
}

// optional .ActorGetFullDataReq getFullDataReq = 7;
bool UniverseMsgBody::has_getfulldatareq() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void UniverseMsgBody::set_has_getfulldatareq() {
  _has_bits_[0] |= 0x00000040u;
}
void UniverseMsgBody::clear_has_getfulldatareq() {
  _has_bits_[0] &= ~0x00000040u;
}
void UniverseMsgBody::clear_getfulldatareq() {
  if (getfulldatareq_ != NULL) getfulldatareq_->::ActorGetFullDataReq::Clear();
  clear_has_getfulldatareq();
}
const ::ActorGetFullDataReq& UniverseMsgBody::getfulldatareq() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.getFullDataReq)
  return getfulldatareq_ != NULL ? *getfulldatareq_
                         : *::ActorGetFullDataReq::internal_default_instance();
}
::ActorGetFullDataReq* UniverseMsgBody::mutable_getfulldatareq() {
  set_has_getfulldatareq();
  if (getfulldatareq_ == NULL) {
    getfulldatareq_ = new ::ActorGetFullDataReq;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.getFullDataReq)
  return getfulldatareq_;
}
::ActorGetFullDataReq* UniverseMsgBody::release_getfulldatareq() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.getFullDataReq)
  clear_has_getfulldatareq();
  ::ActorGetFullDataReq* temp = getfulldatareq_;
  getfulldatareq_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_getfulldatareq(::ActorGetFullDataReq* getfulldatareq) {
  delete getfulldatareq_;
  getfulldatareq_ = getfulldatareq;
  if (getfulldatareq) {
    set_has_getfulldatareq();
  } else {
    clear_has_getfulldatareq();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.getFullDataReq)
}

// optional .ActorGetFullDataRsp getFullDataRsp = 8;
bool UniverseMsgBody::has_getfulldatarsp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void UniverseMsgBody::set_has_getfulldatarsp() {
  _has_bits_[0] |= 0x00000080u;
}
void UniverseMsgBody::clear_has_getfulldatarsp() {
  _has_bits_[0] &= ~0x00000080u;
}
void UniverseMsgBody::clear_getfulldatarsp() {
  if (getfulldatarsp_ != NULL) getfulldatarsp_->::ActorGetFullDataRsp::Clear();
  clear_has_getfulldatarsp();
}
const ::ActorGetFullDataRsp& UniverseMsgBody::getfulldatarsp() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.getFullDataRsp)
  return getfulldatarsp_ != NULL ? *getfulldatarsp_
                         : *::ActorGetFullDataRsp::internal_default_instance();
}
::ActorGetFullDataRsp* UniverseMsgBody::mutable_getfulldatarsp() {
  set_has_getfulldatarsp();
  if (getfulldatarsp_ == NULL) {
    getfulldatarsp_ = new ::ActorGetFullDataRsp;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.getFullDataRsp)
  return getfulldatarsp_;
}
::ActorGetFullDataRsp* UniverseMsgBody::release_getfulldatarsp() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.getFullDataRsp)
  clear_has_getfulldatarsp();
  ::ActorGetFullDataRsp* temp = getfulldatarsp_;
  getfulldatarsp_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_getfulldatarsp(::ActorGetFullDataRsp* getfulldatarsp) {
  delete getfulldatarsp_;
  getfulldatarsp_ = getfulldatarsp;
  if (getfulldatarsp) {
    set_has_getfulldatarsp();
  } else {
    clear_has_getfulldatarsp();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.getFullDataRsp)
}

// optional .ActorSetPosReq setPosReq = 9;
bool UniverseMsgBody::has_setposreq() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void UniverseMsgBody::set_has_setposreq() {
  _has_bits_[0] |= 0x00000100u;
}
void UniverseMsgBody::clear_has_setposreq() {
  _has_bits_[0] &= ~0x00000100u;
}
void UniverseMsgBody::clear_setposreq() {
  if (setposreq_ != NULL) setposreq_->::ActorSetPosReq::Clear();
  clear_has_setposreq();
}
const ::ActorSetPosReq& UniverseMsgBody::setposreq() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.setPosReq)
  return setposreq_ != NULL ? *setposreq_
                         : *::ActorSetPosReq::internal_default_instance();
}
::ActorSetPosReq* UniverseMsgBody::mutable_setposreq() {
  set_has_setposreq();
  if (setposreq_ == NULL) {
    setposreq_ = new ::ActorSetPosReq;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.setPosReq)
  return setposreq_;
}
::ActorSetPosReq* UniverseMsgBody::release_setposreq() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.setPosReq)
  clear_has_setposreq();
  ::ActorSetPosReq* temp = setposreq_;
  setposreq_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_setposreq(::ActorSetPosReq* setposreq) {
  delete setposreq_;
  setposreq_ = setposreq;
  if (setposreq) {
    set_has_setposreq();
  } else {
    clear_has_setposreq();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.setPosReq)
}

// optional .ActorSetPosRsp setPosRsp = 10;
bool UniverseMsgBody::has_setposrsp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void UniverseMsgBody::set_has_setposrsp() {
  _has_bits_[0] |= 0x00000200u;
}
void UniverseMsgBody::clear_has_setposrsp() {
  _has_bits_[0] &= ~0x00000200u;
}
void UniverseMsgBody::clear_setposrsp() {
  if (setposrsp_ != NULL) setposrsp_->::ActorSetPosRsp::Clear();
  clear_has_setposrsp();
}
const ::ActorSetPosRsp& UniverseMsgBody::setposrsp() const {
  // @@protoc_insertion_point(field_get:UniverseMsgBody.setPosRsp)
  return setposrsp_ != NULL ? *setposrsp_
                         : *::ActorSetPosRsp::internal_default_instance();
}
::ActorSetPosRsp* UniverseMsgBody::mutable_setposrsp() {
  set_has_setposrsp();
  if (setposrsp_ == NULL) {
    setposrsp_ = new ::ActorSetPosRsp;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsgBody.setPosRsp)
  return setposrsp_;
}
::ActorSetPosRsp* UniverseMsgBody::release_setposrsp() {
  // @@protoc_insertion_point(field_release:UniverseMsgBody.setPosRsp)
  clear_has_setposrsp();
  ::ActorSetPosRsp* temp = setposrsp_;
  setposrsp_ = NULL;
  return temp;
}
void UniverseMsgBody::set_allocated_setposrsp(::ActorSetPosRsp* setposrsp) {
  delete setposrsp_;
  setposrsp_ = setposrsp;
  if (setposrsp) {
    set_has_setposrsp();
  } else {
    clear_has_setposrsp();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsgBody.setPosRsp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UniverseMsg::kMsgHeadFieldNumber;
const int UniverseMsg::kMsgBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UniverseMsg::UniverseMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_universe_5fcs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UniverseMsg)
}
UniverseMsg::UniverseMsg(const UniverseMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msghead()) {
    msghead_ = new ::UniverseMsgHead(*from.msghead_);
  } else {
    msghead_ = NULL;
  }
  if (from.has_msgbody()) {
    msgbody_ = new ::UniverseMsgBody(*from.msgbody_);
  } else {
    msgbody_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:UniverseMsg)
}

void UniverseMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&msghead_, 0, reinterpret_cast<char*>(&msgbody_) -
    reinterpret_cast<char*>(&msghead_) + sizeof(msgbody_));
}

UniverseMsg::~UniverseMsg() {
  // @@protoc_insertion_point(destructor:UniverseMsg)
  SharedDtor();
}

void UniverseMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msghead_;
  }
  if (this != internal_default_instance()) {
    delete msgbody_;
  }
}

void UniverseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UniverseMsg::descriptor() {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UniverseMsg& UniverseMsg::default_instance() {
  protobuf_universe_5fcs_2eproto::InitDefaults();
  return *internal_default_instance();
}

UniverseMsg* UniverseMsg::New(::google::protobuf::Arena* arena) const {
  UniverseMsg* n = new UniverseMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UniverseMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:UniverseMsg)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      GOOGLE_DCHECK(msghead_ != NULL);
      msghead_->::UniverseMsgHead::Clear();
    }
    if (has_msgbody()) {
      GOOGLE_DCHECK(msgbody_ != NULL);
      msgbody_->::UniverseMsgBody::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UniverseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UniverseMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .UniverseMsgHead msgHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .UniverseMsgBody msgBody = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgbody()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UniverseMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UniverseMsg)
  return false;
#undef DO_
}

void UniverseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UniverseMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .UniverseMsgHead msgHead = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msghead_, output);
  }

  // optional .UniverseMsgBody msgBody = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msgbody_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UniverseMsg)
}

::google::protobuf::uint8* UniverseMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UniverseMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .UniverseMsgHead msgHead = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msghead_, deterministic, target);
  }

  // optional .UniverseMsgBody msgBody = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msgbody_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UniverseMsg)
  return target;
}

size_t UniverseMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UniverseMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .UniverseMsgHead msgHead = 1;
  if (has_msghead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }
  // optional .UniverseMsgBody msgBody = 2;
  if (has_msgbody()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msgbody_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UniverseMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UniverseMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UniverseMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UniverseMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UniverseMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UniverseMsg)
    MergeFrom(*source);
  }
}

void UniverseMsg::MergeFrom(const UniverseMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UniverseMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_msghead()->::UniverseMsgHead::MergeFrom(from.msghead());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_msgbody()->::UniverseMsgBody::MergeFrom(from.msgbody());
    }
  }
}

void UniverseMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UniverseMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniverseMsg::CopyFrom(const UniverseMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UniverseMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniverseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  if (has_msgbody()) {
    if (!this->msgbody_->IsInitialized()) return false;
  }
  return true;
}

void UniverseMsg::Swap(UniverseMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UniverseMsg::InternalSwap(UniverseMsg* other) {
  std::swap(msghead_, other->msghead_);
  std::swap(msgbody_, other->msgbody_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UniverseMsg::GetMetadata() const {
  protobuf_universe_5fcs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_universe_5fcs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UniverseMsg

// required .UniverseMsgHead msgHead = 1;
bool UniverseMsg::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UniverseMsg::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void UniverseMsg::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void UniverseMsg::clear_msghead() {
  if (msghead_ != NULL) msghead_->::UniverseMsgHead::Clear();
  clear_has_msghead();
}
const ::UniverseMsgHead& UniverseMsg::msghead() const {
  // @@protoc_insertion_point(field_get:UniverseMsg.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::UniverseMsgHead::internal_default_instance();
}
::UniverseMsgHead* UniverseMsg::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::UniverseMsgHead;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsg.msgHead)
  return msghead_;
}
::UniverseMsgHead* UniverseMsg::release_msghead() {
  // @@protoc_insertion_point(field_release:UniverseMsg.msgHead)
  clear_has_msghead();
  ::UniverseMsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void UniverseMsg::set_allocated_msghead(::UniverseMsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsg.msgHead)
}

// optional .UniverseMsgBody msgBody = 2;
bool UniverseMsg::has_msgbody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UniverseMsg::set_has_msgbody() {
  _has_bits_[0] |= 0x00000002u;
}
void UniverseMsg::clear_has_msgbody() {
  _has_bits_[0] &= ~0x00000002u;
}
void UniverseMsg::clear_msgbody() {
  if (msgbody_ != NULL) msgbody_->::UniverseMsgBody::Clear();
  clear_has_msgbody();
}
const ::UniverseMsgBody& UniverseMsg::msgbody() const {
  // @@protoc_insertion_point(field_get:UniverseMsg.msgBody)
  return msgbody_ != NULL ? *msgbody_
                         : *::UniverseMsgBody::internal_default_instance();
}
::UniverseMsgBody* UniverseMsg::mutable_msgbody() {
  set_has_msgbody();
  if (msgbody_ == NULL) {
    msgbody_ = new ::UniverseMsgBody;
  }
  // @@protoc_insertion_point(field_mutable:UniverseMsg.msgBody)
  return msgbody_;
}
::UniverseMsgBody* UniverseMsg::release_msgbody() {
  // @@protoc_insertion_point(field_release:UniverseMsg.msgBody)
  clear_has_msgbody();
  ::UniverseMsgBody* temp = msgbody_;
  msgbody_ = NULL;
  return temp;
}
void UniverseMsg::set_allocated_msgbody(::UniverseMsgBody* msgbody) {
  delete msgbody_;
  msgbody_ = msgbody;
  if (msgbody) {
    set_has_msgbody();
  } else {
    clear_has_msgbody();
  }
  // @@protoc_insertion_point(field_set_allocated:UniverseMsg.msgBody)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
