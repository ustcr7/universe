syntax = "proto2";

enum UniverseMsgId
{
    UNIVERSE_MSG_ID_ACTOR_REGISTE_REQ              = 1;
	UNIVERSE_MSG_ID_ACTOR_REGISTE_RSP              = 2;
	UNIVERSE_MSG_ID_ACTOR_LOGIN_REQ                = 3;
	UNIVERSE_MSG_ID_ACTOR_LOGIN_RSP                = 4;
	UNIVERSE_MSG_ID_ACTOR_LOGOUT_REQ               = 5;
	UNIVERSE_MSG_ID_ACTOR_LOGOUT_RSP               = 6;
	UNIVERSE_MSG_ID_ACTOR_GET_FULL_DATA_REQ        = 7;
	UNIVERSE_MSG_ID_ACTOR_GET_FULL_DATA_RSP        = 8;
	UNIVERSE_MSG_ID_ACTOR_SET_POS_REQ              = 9;
	UNIVERSE_MSG_ID_ACTOR_SET_POS_RSP              = 10;
	UNIVERSE_MSG_ID_ACTOR_MOVE_REQ                 = 11;
	UNIVERSE_MSG_ID_ACTOR_MOVE_RSP                 = 12;
	UNIVERSE_MSG_ID_CHAT_REQ                       = 13;
	UNIVERSE_MSG_ID_CHAT_RSP                       = 14;
	UNIVERSE_MSG_ID_FORWRARD_CHAT                  = 15;
	UNIVERSE_MSG_ID_LEARN_SPELL_REQ                = 16;
	UNIVERSE_MSG_ID_LEARN_SPELL_RSP                = 17;
	UNIVERSE_MSG_ID_CAST_SPELL_REQ                 = 18;
	UNIVERSE_MSG_ID_CAST_SPELL_RSP                 = 19;
	UNIVERSE_MSG_ID_KILL_MONSTER_REQ               = 20; //实际上应该是释放技能的效果里杀死monster,这里先简单处理一下
	UNIVERSE_MSG_ID_KILL_MONSTER_RSP               = 21;
	UNIVERSE_MSG_ID_COLLECT_ENTITY_REQ             = 22;
	UNIVERSE_MSG_ID_COLLECT_ENTITY_RSP             = 23;
	UNIVERSE_MSG_ID_ACCEPT_QUEST_REQ               = 24;
	UNIVERSE_MSG_ID_ACCEPT_QUEST_RSP               = 25;
	UNIVERSE_MSG_ID_COMMIT_QUEST_REQ               = 26;
	UNIVERSE_MSG_ID_COMMIT_QUEST_RSP               = 27;
}

message UniverseMsgHead
{
  required int32  msgId   = 1;
  optional int32  actorId = 3;
}

message ActorRegisteReq
{
    required int32 id    = 1;
    required string name = 2;
}

message ActorRegisteRsp
{
    required int32 result = 1;
}

message ActorLoginReq
{
    //required string name = 1;
	required int32 id    = 1;
}

message ActorLoginRsp
{
    required int32 result = 1;
}

message ActorLogoutReq
{
    required int32 id = 1;
}

message ActorLogoutRsp
{
    optional int32 reserve = 1;
}

message ActorGetFullDataReq
{
    optional int32 id = 1;
}
message ActorPos
{
    required int32 x    = 1;
	required int32 y    = 2;
}

message ActorGetFullDataRsp
{
    optional int32     id    = 1;
    optional string    name  = 2;
	optional ActorPos  pos   = 3;
}

message ActorSetPosReq
{
	optional ActorPos  pos  = 1;
}
message ActorSetPosRsp
{
    required int32 result = 1;
}

message PathNode
{
    optional int32 pos_x = 1;
	optional int32 pos_y = 2;
}
message ActorMoveReq
{
    repeated PathNode paths = 1;
}
message ActorMoveRsp
{
    optional int32 result = 1;
}

enum ChatType
{
    CHAT_TYPE_PRIVATE             = 1;
	CHAT_TYPE_AROUND              = 2;
	CHAT_TYPE_BROADCAST           = 3;
}

message ChatInfo
{
    optional ChatType    type     = 1;
    optional string      content  = 2;
	optional uint64      dstId    = 3;
}
message ChatReq
{
    optional ChatInfo chatInfo   = 1;
}
message ChatRsp
{
    optional int32       result   = 1;
}

message ForwardChatInfo
{
    optional ChatInfo chatInfo   = 1;
}

message LearnSpellReq
{
    optional int32 spellId       = 1;
}

message LearnSpellRsp
{
    optional int32 spellId       = 1;
	optional int32 result        = 2;
}

message CastSpellReq
{
    optional int32  spellId       = 1;
	optional uint64 targetId      = 2;
}

message CastSpellRsp
{
    optional int32  spellId       = 1;
	optional int32  result        = 2;
}

message KillMonsterReq
{
    optional int32 monsterId      = 1;
}
message KillMonsterRsp
{
    optional int32 result         = 2;
}

message CollectEntityReq
{
    optional int32 entityId      = 1;
}
message CollectEntityRsp
{
    optional int32 result         = 2;
}

message AcceptQuestReq
{
    optional int32 questId      = 1;
}
message AcceptQuestRsp
{
    optional int32 result         = 2;
}

message CommitQuestReq
{
    optional int32 questId      = 1;
}
message CommitQuestRsp
{
    optional int32 result         = 2;
}

message UniverseMsgBody
{
    optional ActorRegisteReq             registeReq          = 1;
	optional ActorRegisteRsp             registeRsp          = 2;
    optional ActorLoginReq               loginReq            = 3;
	optional ActorLoginRsp               loginRsp            = 4;
	optional ActorLogoutReq              logoutReq           = 5;
	optional ActorLogoutRsp              logoutRsp           = 6;
	optional ActorGetFullDataReq         getFullDataReq      = 7;
	optional ActorGetFullDataRsp         getFullDataRsp      = 8;
	optional ActorSetPosReq              setPosReq           = 9;
	optional ActorSetPosRsp              setPosRsp           = 10;
	optional ActorMoveReq                moveReq             = 11;
	optional ActorMoveRsp                moveRsp             = 12;
	optional ChatReq                     chatReq             = 13;
	optional ChatRsp                     chatRsp             = 14;
	optional ForwardChatInfo             forwardChatInfo     = 15;  //server-->client,其他client发来的聊天消息
	optional LearnSpellReq               learnSpellReq       = 16;  //学习技能
	optional LearnSpellRsp               learnSpellRsp       = 17;
	optional CastSpellReq                castSpellReq        = 18;  //释放技能
	optional CastSpellRsp                castSpellRsp        = 19;
	optional KillMonsterReq              killMonsterReq      = 20;
	optional KillMonsterRsp              killMonsterRsp      = 21;
	optional CollectEntityReq            collectEntityReq    = 22;
	optional CollectEntityRsp            collectEntityRsp    = 23;
	optional AcceptQuestReq              accetpQuestReq      = 24;
	optional AcceptQuestRsp              accetpQuestRsp      = 25;
	optional CommitQuestReq              commitQuestReq      = 26;
	optional CommitQuestRsp              commitQuestReq      = 27;
}

message UniverseMsg
{
  required UniverseMsgHead msgHead = 1;
  optional UniverseMsgBody msgBody = 2;
}